
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C6969D566DDDE96447BB43FEE5651933'
    
_lr_action_items = {'MINUSEQUAL':([25,29,],[-8,48,]),'>':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,59,-32,-31,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,-35,-39,-46,59,-47,-38,59,59,-49,-34,-45,-37,-44,-36,-48,-61,59,59,-54,]),'BITS':([0,13,19,20,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,130,132,135,139,141,],[1,1,1,1,-14,1,-16,1,-18,-56,-29,-17,-13,1,-21,1,-20,-52,-51,-50,-53,-19,-28,-26,1,1,-27,1,-55,]),'=':([10,25,26,29,34,79,108,120,],[-8,-8,42,46,54,-23,123,128,]),'LESSEQUAL':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,63,-32,-31,-30,63,63,63,63,63,63,63,63,63,63,63,63,63,-35,-39,-46,63,-47,-38,63,63,-49,-34,-45,-37,-44,-36,-48,-61,63,63,-54,]),'!':([24,28,35,37,41,42,44,46,47,48,49,50,54,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,112,123,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LONG':([0,13,19,20,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,130,132,135,139,141,],[8,8,8,8,-14,8,-16,8,-18,-56,-29,-17,-13,8,-21,8,-20,-52,-51,-50,-53,-19,-28,-26,8,8,-27,8,-55,]),'WHILE':([19,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,132,135,141,],[23,-14,23,-16,23,-18,-56,-29,-17,-13,23,-21,23,-20,-52,-51,-50,-53,-19,-28,-26,23,-27,-55,]),'+':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,68,-32,-31,-30,68,68,68,68,68,68,68,68,68,68,68,68,68,-35,68,68,68,68,68,68,68,68,-34,68,-37,68,-36,68,-61,68,68,-54,]),'RIGHTSHIFTEQUAL':([25,29,],[-8,50,]),'<':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,64,-32,-31,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,-35,-39,-46,64,-47,-38,64,64,-49,-34,-45,-37,-44,-36,-48,-61,64,64,-54,]),'INT':([0,13,19,20,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,130,132,135,139,141,],[5,5,5,5,-14,5,-16,5,-18,-56,-29,-17,-13,5,-21,5,-20,-52,-51,-50,-53,-19,-28,-26,5,5,-27,5,-55,]),'DIGITS':([9,24,28,35,37,41,42,44,46,47,48,49,50,54,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,112,123,],[12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'BOOL':([0,13,19,20,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,130,132,135,139,141,],[3,3,3,3,-14,3,-16,3,-18,-56,-29,-17,-13,3,-21,3,-20,-52,-51,-50,-53,-19,-28,-26,3,3,-27,3,-55,]),'}':([21,31,51,52,55,62,81,87,88,113,115,116,117,118,119,121,122,127,135,141,],[-14,-15,-16,88,-18,-56,-29,-17,-13,-21,-20,-52,-51,-50,-53,-19,-28,-26,-27,-55,]),'[':([1,],[9,]),'RETURN':([19,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,132,135,141,],[28,-14,28,-16,28,-18,-56,-29,-17,-13,28,-21,28,-20,-52,-51,-50,-53,-19,-28,-26,28,-27,-55,]),'|':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,66,-32,-31,-30,66,66,66,66,66,66,66,66,66,66,66,66,-40,-35,-39,-46,-42,-47,-38,-43,-41,-49,-34,-45,-37,-44,-36,-48,-61,66,66,-54,]),']':([12,],[14,]),'OPAND':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,61,-32,-31,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,-35,-39,-46,-42,-47,-38,61,61,-49,-34,-45,-37,-44,-36,-48,-61,61,61,-54,]),'LEFTSHIFTEQUAL':([25,29,],[-8,47,]),'PLUSEQUAL':([25,29,],[-8,49,]),'*':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,72,-32,-31,-30,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-37,72,-36,72,-61,72,72,-54,]),'IF':([19,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,132,135,141,],[27,-14,27,-16,27,-18,-56,-29,-17,-13,27,-21,27,-20,-52,-51,-50,-53,-19,-28,-26,27,-27,-55,]),'GREATEREQUAL':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,60,-32,-31,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,-35,-39,-46,60,-47,-38,60,60,-49,-34,-45,-37,-44,-36,-48,-61,60,60,-54,]),'MAPSTO':([124,138,],[130,139,]),';':([3,5,7,8,10,14,34,36,38,39,40,45,74,77,78,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,134,140,],[-6,-4,-3,-5,-8,-7,55,62,-32,-31,-30,81,-33,-24,113,115,116,117,118,119,121,-40,-35,-39,-46,-42,-47,-38,-43,-41,-49,-34,-45,-37,-44,-36,-48,-61,-25,-54,141,]),'(':([10,11,23,24,27,28,35,37,40,41,42,44,46,47,48,49,50,54,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,112,123,133,],[-8,13,35,41,44,41,41,41,75,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,136,]),',':([3,5,7,8,10,13,14,16,17,18,25,26,29,33,38,39,40,53,74,75,77,78,79,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,126,129,131,134,136,137,],[-6,-4,-3,-5,-8,-9,-7,20,-10,-12,-8,43,-22,-11,-32,-31,-30,89,-33,-57,-24,112,-23,-40,-35,-39,-46,-42,-47,-38,-43,-41,-49,-34,-45,-37,-44,-36,-48,-58,125,-61,-25,-60,-59,-54,-57,125,]),'AWAIT':([19,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,132,135,141,],[24,-14,24,-16,24,-18,-56,-29,-17,-13,24,-21,24,-20,-52,-51,-50,-53,-19,-28,-26,24,-27,-55,]),'/':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,70,-32,-31,-30,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-37,70,-36,70,-61,70,70,-54,]),'$end':([2,6,21,30,55,62,81,88,113,115,116,117,118,119,121,122,127,135,141,],[0,-1,-14,-2,-18,-56,-29,-13,-21,-20,-52,-51,-50,-53,-19,-28,-26,-27,-55,]),'&':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,57,-32,-31,-30,57,57,57,57,57,57,57,57,57,57,57,57,-40,-35,-39,-46,-42,-47,-38,-43,57,-49,-34,-45,-37,-44,-36,-48,-61,57,57,-54,]),'-':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,58,-32,-31,-30,58,58,58,58,58,58,58,58,58,58,58,58,58,-35,58,58,58,58,58,58,58,58,-34,58,-37,58,-36,58,-61,58,58,-54,]),')':([3,5,7,8,10,13,14,16,17,18,33,38,39,40,56,74,75,76,80,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,129,131,134,136,137,],[-6,-4,-3,-5,-8,-9,-7,19,-10,-12,-11,-32,-31,-30,91,-33,-57,111,114,-40,-35,-39,-46,-42,-47,-38,-43,-41,-49,-34,-45,-37,-44,-36,-48,-58,124,-61,-60,-59,-54,-57,138,]),'LEFTSHIFT':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,73,-32,-31,-30,73,73,73,73,73,73,73,73,73,73,73,73,73,-35,73,73,73,73,73,73,73,-49,-34,73,-37,73,-36,-48,-61,73,73,-54,]),'ELSE':([21,55,62,81,88,113,115,116,117,118,119,121,122,127,135,141,],[-14,-18,-56,-29,-13,-21,-20,-52,-51,-50,-53,-19,-28,132,-27,-55,]),'OPOR':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,65,-32,-31,-30,65,65,65,65,65,65,65,65,65,65,65,65,65,-35,-39,-46,-42,-47,-38,-43,65,-49,-34,-45,-37,-44,-36,-48,-61,65,65,-54,]),'RIGHTSHIFT':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,67,-32,-31,-30,67,67,67,67,67,67,67,67,67,67,67,67,67,-35,67,67,67,67,67,67,67,-49,-34,67,-37,67,-36,-48,-61,67,67,-54,]),'IDENT':([0,3,4,5,7,8,13,14,15,19,20,21,22,24,25,28,31,32,35,37,41,42,43,44,46,47,48,49,50,51,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,81,87,88,89,91,112,113,114,115,116,117,118,119,121,122,123,125,127,128,130,132,135,136,139,141,],[7,-6,10,-4,-3,-5,7,-7,10,25,7,-14,10,10,-3,10,25,10,10,10,10,10,10,10,10,10,10,10,10,-16,25,10,-18,10,10,10,10,10,-56,10,10,10,10,10,10,10,10,10,10,10,10,-29,-17,-13,10,25,10,-21,25,-20,-52,-51,-50,-53,-19,-28,10,10,-26,10,7,25,-27,10,7,-55,]),'NOTEQUAL':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,69,-32,-31,-30,69,69,69,69,69,69,69,69,69,69,69,69,69,-35,-39,-46,69,-47,-38,69,69,-49,-34,-45,-37,-44,-36,-48,-61,69,69,-54,]),'{':([19,91,114,132,],[31,31,31,31,]),'EQUAL':([3,5,7,8,10,14,36,38,39,40,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,126,129,134,],[-6,-4,-3,-5,-8,-7,71,-32,-31,-30,71,71,71,71,71,71,71,71,71,71,71,71,71,-35,-39,-46,71,-47,-38,71,71,-49,-34,-45,-37,-44,-36,-48,-61,71,71,-54,]),'ASYNC':([19,21,31,51,52,55,62,81,87,88,91,113,114,115,116,117,118,119,121,122,127,132,135,141,],[32,-14,32,-16,32,-18,-56,-29,-17,-13,32,-21,32,-20,-52,-51,-50,-53,-19,-28,-26,32,-27,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[2,]),'statement':([19,31,52,91,114,132,],[21,51,87,21,21,21,]),'ident':([4,15,19,22,24,28,31,32,35,37,41,42,43,44,46,47,48,49,50,52,54,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,89,91,112,114,123,125,128,132,136,],[11,18,29,34,40,40,29,53,40,40,40,40,79,40,40,40,40,40,40,29,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,108,120,29,40,29,40,108,133,29,108,]),'func_arg':([75,125,136,],[109,131,109,]),'func_args':([75,136,],[110,137,]),'expression':([24,28,35,37,41,42,44,46,47,48,49,50,54,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,112,123,],[36,45,56,74,76,77,80,82,83,84,85,86,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,126,129,]),'expression_list':([42,],[78,]),'type':([0,13,19,20,31,52,91,114,130,132,139,],[4,15,22,15,22,22,22,22,134,22,140,]),'block':([19,91,114,132,],[30,122,127,135,]),'func_decl':([0,],[6,]),'statements':([31,],[52,]),'func_decl_args':([13,],[16,]),'constant':([24,28,35,37,41,42,44,46,47,48,49,50,54,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,112,123,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ident_list':([19,31,52,91,114,132,],[26,26,26,26,26,26,]),'func_decl_arg':([13,20,],[17,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_decl','program',1,'p_program','parser.py',22),
  ('func_decl -> type ident ( func_decl_args ) block','func_decl',6,'p_function_declaration','parser.py',27),
  ('type -> IDENT','type',1,'p_type','parser.py',32),
  ('type -> INT','type',1,'p_type','parser.py',33),
  ('type -> LONG','type',1,'p_type','parser.py',34),
  ('type -> BOOL','type',1,'p_type','parser.py',35),
  ('type -> BITS [ DIGITS ]','type',4,'p_type','parser.py',36),
  ('ident -> IDENT','ident',1,'p_ident','parser.py',52),
  ('func_decl_args -> <empty>','func_decl_args',0,'p_func_decl_args','parser.py',56),
  ('func_decl_args -> func_decl_arg','func_decl_args',1,'p_func_decl_args','parser.py',57),
  ('func_decl_args -> func_decl_args , func_decl_arg','func_decl_args',3,'p_func_decl_args','parser.py',58),
  ('func_decl_arg -> type ident','func_decl_arg',2,'p_func_decl_arg','parser.py',68),
  ('block -> { statements }','block',3,'p_block','parser.py',72),
  ('block -> statement','block',1,'p_block','parser.py',73),
  ('statements -> <empty>','statements',0,'p_statements','parser.py',80),
  ('statements -> statement','statements',1,'p_statements','parser.py',81),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',82),
  ('statement -> type ident ;','statement',3,'p_declaration','parser.py',92),
  ('statement -> type ident = expression ;','statement',5,'p_declare_and_assign','parser.py',96),
  ('statement -> ident = expression ;','statement',4,'p_assignment','parser.py',103),
  ('statement -> ident_list = expression_list ;','statement',4,'p_many_assignment','parser.py',107),
  ('ident_list -> ident','ident_list',1,'p_ident_list','parser.py',111),
  ('ident_list -> ident_list , ident','ident_list',3,'p_ident_list','parser.py',112),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',122),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','parser.py',123),
  ('statement -> IF ( expression ) block','statement',5,'p_if_statement','parser.py',133),
  ('statement -> IF ( expression ) block ELSE block','statement',7,'p_if_else_statement','parser.py',137),
  ('statement -> WHILE ( expression ) block','statement',5,'p_while_statement','parser.py',141),
  ('statement -> RETURN expression ;','statement',3,'p_return_statement','parser.py',145),
  ('expression -> ident','expression',1,'p_ident_expression','parser.py',149),
  ('expression -> constant','expression',1,'p_constant_expression','parser.py',153),
  ('constant -> DIGITS','constant',1,'p_numerical_constant','parser.py',157),
  ('expression -> ! expression','expression',2,'p_unitary_expression','parser.py',161),
  ('expression -> expression + expression','expression',3,'p_binary_expression','parser.py',165),
  ('expression -> expression - expression','expression',3,'p_binary_expression','parser.py',166),
  ('expression -> expression * expression','expression',3,'p_binary_expression','parser.py',167),
  ('expression -> expression / expression','expression',3,'p_binary_expression','parser.py',168),
  ('expression -> expression < expression','expression',3,'p_binary_expression','parser.py',169),
  ('expression -> expression > expression','expression',3,'p_binary_expression','parser.py',170),
  ('expression -> expression & expression','expression',3,'p_binary_expression','parser.py',171),
  ('expression -> expression | expression','expression',3,'p_binary_expression','parser.py',172),
  ('expression -> expression OPAND expression','expression',3,'p_binary_expression','parser.py',173),
  ('expression -> expression OPOR expression','expression',3,'p_binary_expression','parser.py',174),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_expression','parser.py',175),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_binary_expression','parser.py',176),
  ('expression -> expression GREATEREQUAL expression','expression',3,'p_binary_expression','parser.py',177),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_binary_expression','parser.py',178),
  ('expression -> expression LEFTSHIFT expression','expression',3,'p_binary_expression','parser.py',179),
  ('expression -> expression RIGHTSHIFT expression','expression',3,'p_binary_expression','parser.py',180),
  ('statement -> ident PLUSEQUAL expression ;','statement',4,'p_op_assignment','parser.py',185),
  ('statement -> ident MINUSEQUAL expression ;','statement',4,'p_op_assignment','parser.py',186),
  ('statement -> ident LEFTSHIFTEQUAL expression ;','statement',4,'p_op_assignment','parser.py',187),
  ('statement -> ident RIGHTSHIFTEQUAL expression ;','statement',4,'p_op_assignment','parser.py',188),
  ('expression -> ident ( func_args ) MAPSTO type','expression',6,'p_function_call','parser.py',198),
  ('statement -> ASYNC ident , ident = ident ( func_args ) MAPSTO type ;','statement',12,'p_async_function_call','parser.py',202),
  ('statement -> AWAIT expression ;','statement',3,'p_await_statement','parser.py',206),
  ('func_args -> <empty>','func_args',0,'p_func_args','parser.py',212),
  ('func_args -> func_arg','func_args',1,'p_func_args','parser.py',213),
  ('func_args -> func_args , func_arg','func_args',3,'p_func_args','parser.py',214),
  ('func_arg -> ident = expression','func_arg',3,'p_func_arg','parser.py',224),
  ('expression -> ( expression )','expression',3,'p_parenthesis_expression','parser.py',228),
]
